package estoque00;

import java.sql.*;
import java.util.ArrayList;
import java.util.Scanner;

public class Comandos {
	
// TABLE PRODUTOS----------------------------------------------------------------------------------------------	
	// the INSERT SQL command. Inserts new product and his values
	public static String inserir() {
		String x = "";
		Connection con = Conexao.getConnection();
		String sql = "insert into Produtos(setor, modelo, tamanho, cor, preco, estoque) values"
				+ "(?, ?, ?, ?, ?, ?)";
		// list and array list to manipulate values inserted by user in "for loop"
		String[] tabelas = {"o setor", "o modelo", "o tamanho", "a cor", "o preco", "quantas comprou"};
		ArrayList<String> results = new ArrayList<String>();
		// user will be insert values to BD
		Scanner input = new Scanner(System.in);
		for (int i = 0; i < tabelas.length; i++) {
		System.out.println("Digite " + tabelas[i]);
		// .add inserts the values to ArrayList; .nextLine receive the value inserted by the user
		results.add(input.nextLine().toUpperCase());
	
		}
		input.close();
		
		try {
		PreparedStatement st = con.prepareStatement(sql);
		st.setString(1, results.get(0));
		st.setString(2, results.get(1));
		st.setString(3, results.get(2));
		st.setString(4, results.get(3));
		st.setFloat(5, Float.parseFloat(results.get(4)));
		st.setInt(6, Integer.parseInt(results.get(5)));
		
		st.executeUpdate();
		// close the statement and connection to free up espace
		st.close();
		con.close();
		
		System.out.print("DADOS INSERIDOS COM SUCESSO.");
		return x;
	}catch (SQLException e) {
		e.printStackTrace();
		return null;
		}
		
	}
	// Delete SQL command. When the produts is not disponible ('estoque' = 0)
	public static String excluir() {
		String x = "";
		Connection con = Conexao.getConnection();
		String sql = "delete from produtos where estoque <= 0;";
		
		try {
			PreparedStatement st = con.prepareStatement(sql);
			st.executeUpdate();
			
			st.close();
			con.close();
			System.out.print(" EXCLUIDO COM SUCESSO");
			return x;
		} catch (SQLException e) {
			e.printStackTrace();
			return null;
			
		}
		
	}
	// UPDATE SQL command. The sales will decreased  quantity in 'estoque'
	public static String atualizar() {
		String x = "";
		Connection con = Conexao.getConnection();
		String sql = "UPDATE produtos INNER JOIN venda ON venda.idVenda = produtos.id "
				+ "SET produtos.estoque = estoque - venda.quantidade WHERE produtos.id = venda.idVenda;";
		try {
			PreparedStatement st = con.prepareStatement(sql);
			st.executeUpdate();
			
			st.close();
			con.close();
				
			System.out.print("ATUALIZADO COM SUCESSO");
			return x;
		} catch (SQLException e) {
			e.printStackTrace();
			return null;
		}
		
	}

	
}
